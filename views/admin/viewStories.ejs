<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Manage Stories - Admin Dashboard</title>
    <link rel="stylesheet" href="/css/admin-dashboard.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        .main-content {
            margin-left: 320px; /* Adjusted for sidebar */
            padding: 40px;
        }

        .stories-container {
            max-width: 1200px;
            margin: 0 auto;
        }

        .page-title {
            font-size: 2.5rem;
            color: #2c3e50;
            margin-bottom: 30px;
            padding-bottom: 15px;
            border-bottom: 3px solid #3498db;
        }

        .story-card {
            background: white;
            border-radius: 15px;
            padding: 30px;
            margin-bottom: 30px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .story-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        }

        .story-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 25px;
            padding-bottom: 15px;
            border-bottom: 1px solid #eee;
        }

        .story-title {
            font-size: 2rem;
            color: #2c3e50;
            margin: 0;
            flex-grow: 1;
        }

        .status-badge {
            padding: 8px 15px;
            border-radius: 20px;
            font-size: 0.9rem;
            font-weight: 500;
            margin-left: 15px;
        }

        .status-published {
            background: #2ecc71;
            color: white;
        }

        .status-draft {
            background: #f1c40f;
            color: #34495e;
        }

        .story-content {
            color: #34495e;
            margin-bottom: 25px;
            line-height: 1.8;
            font-size: 1.1rem;
            max-height: 150px;
            overflow: hidden;
            position: relative;
        }

        .story-content::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 50px;
            background: linear-gradient(transparent, white);
        }

        .story-images {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 20px;
            margin: 25px 0;
        }

        .story-image {
            width: 100%;
            height: 200px;
            object-fit: cover;
            border-radius: 10px;
            transition: transform 0.3s ease;
        }

        .story-image:hover {
            transform: scale(1.05);
        }

        .story-actions {
            display: flex;
            gap: 15px;
            margin-top: 25px;
            padding-top: 20px;
            border-top: 1px solid #eee;
        }

        .btn {
            padding: 12px 25px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 1rem;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 8px;
            transition: all 0.3s ease;
        }

        /* Form Styling */
#editForm {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: white;
    padding: 30px;
    border-radius: 12px;
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.15);
    width: 90%;
    max-width: 600px;
    max-height: 90vh;
    overflow-y: auto;
    z-index: 1000;
}

/* Overlay background */
.modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.5);
    z-index: 999;
    display: none;
}

#editForm.active + .modal-overlay {
    display: block;
}

.form-group {
    margin-bottom: 20px;
}

.form-group label {
    display: block;
    margin-bottom: 8px;
    font-weight: 600;
    color: #2c3e50;
    font-size: 14px;
}

.form-control {
    width: 100%;
    padding: 12px;
    border: 1px solid #e1e1e1;
    border-radius: 8px;
    font-size: 16px;
    transition: all 0.3s ease;
    background: #f8f9fa;
}

.form-control:focus {
    border-color: #3498db;
    outline: none;
    box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);
    background: white;
}

textarea.form-control {
    min-height: 200px;
    resize: vertical;
    line-height: 1.6;
}

/* Form Header */
#editForm h2 {
    margin: 0 0 20px 0;
    color: #2c3e50;
    font-size: 24px;
    font-weight: 600;
    text-align: center;
}

/* Form Buttons */
#editForm .button-group {
    display: flex;
    gap: 10px;
    justify-content: flex-end;
    margin-top: 20px;
}

#editForm button {
    padding: 10px 20px;
    border: none;
    border-radius: 6px;
    font-size: 14px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.3s ease;
}

#editForm button[type="submit"] {
    background: #3498db;
    color: white;
}

#editForm button[type="submit"]:hover {
    background: #2980b9;
}

#editForm button[type="button"] {
    background: #e74c3c;
    color: white;
}

#editForm button[type="button"]:hover {
    background: #c0392b;
}

/* Scrollbar Styling */
#editForm::-webkit-scrollbar {
    width: 8px;
}

#editForm::-webkit-scrollbar-track {
    background: #f1f1f1;
    border-radius: 4px;
}

#editForm::-webkit-scrollbar-thumb {
    background: #c1c1c1;
    border-radius: 4px;
}

#editForm::-webkit-scrollbar-thumb:hover {
    background: #a1a1a1;
}

        .btn i {
            font-size: 1.1rem;
        }

        .btn-edit {
            background: #3498db;
            color: white;
        }

        .btn-delete {
            background: #e74c3c;
            color: white;
        }

        .btn-publish {
            background: #2ecc71;
            color: white;
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 10px rgba(0,0,0,0.2);
        }

        .image-upload {
            margin-top: 25px;
            padding: 20px;
            border: 2px dashed #bdc3c7;
            border-radius: 10px;
            text-align: center;
            transition: all 0.3s ease;
        }

        .image-upload:hover {
            border-color: #3498db;
            background: #f7f9fc;
        }

        .image-upload input[type="file"] {
            margin-bottom: 15px;
        }

        .no-stories {
            text-align: center;
            padding: 50px;
            background: white;
            border-radius: 15px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }

        .no-stories a {
            color: #3498db;
            text-decoration: none;
            font-weight: 500;
        }

        .no-stories a:hover {
            text-decoration: underline;
        }

        /* Edit Modal Styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
            backdrop-filter: blur(5px);
        }

        .modal-content {
            background: white;
            margin: 5% auto;
            padding: 30px;
            width: 80%;
            max-width: 900px;
            border-radius: 15px;
            position: relative;
        }

        .close-modal {
            position: absolute;
            right: 25px;
            top: 25px;
            font-size: 1.8rem;
            cursor: pointer;
            color: #7f8c8d;
            transition: color 0.3s ease;
        }

        .close-modal:hover {
            color: #34495e;
        }

        .modal-form textarea {
            width: 100%;
            min-height: 300px;
            margin: 15px 0;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 8px;
            font-size: 1.1rem;
            line-height: 1.6;
            resize: vertical;
        }

        @media (max-width: 768px) {
            .main-content {
                margin-left: 0;
                padding: 20px;
            }

            .story-images {
                grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
            }

            .story-actions {
                flex-direction: column;
            }

            .btn {
                width: 100%;
                justify-content: center;
            }
        }

        #notification {
            position: fixed;
            bottom: 20px;
            right: 20px;
            padding: 20px 45px 20px 25px;
            border-radius: 8px;
            color: white;
            background-color: #4CAF50;
            box-shadow: 0 4px 15px rgba(0,0,0,0.2);
            z-index: 1000;
            transition: all 0.5s ease;
            max-width: 400px;
            word-wrap: break-word;
            font-size: 1rem;
            line-height: 1.5;
        }

        #notification .close-btn {
            position: absolute;
            right: 15px;
            top: 50%;
            transform: translateY(-50%);
            cursor: pointer;
            font-size: 20px;
            opacity: 0.8;
            transition: opacity 0.3s ease;
        }

        #notification .close-btn:hover {
            opacity: 1;
        }

        .notification-error {
            background-color: #e74c3c !important;
        }

        .notification-success {
            background-color: #2ecc71 !important;
        }

        .notification-info {
            background-color: #3498db !important;
        }

        .notification-hidden {
            opacity: 0;
            transform: translateY(100px);
            visibility: hidden;
            transition: all 0.5s ease;
        }

        .notification-visible {
            opacity: 1;
            transform: translateY(0);
            visibility: visible;
            transition: all 0.5s ease;
        }
    </style>
</head>
<body>
    <%- include('./component/header') %>

    <div id="notification" class="notification-hidden">
        <span id="notification-message"></span>
        <span class="close-btn">&times;</span>
    </div>
    
    <div class="main-content">
        <div class="stories-container">
            <h1 class="page-title">Manage Stories</h1>
            
            <% if (stories && stories.length > 0) { %>
                <% stories.forEach(story => { %>
                    <div class="story-card">
                        <div class="story-header">
                            <h2 class="story-title"><%= story.title %></h2>
                            <span class="status-badge <%= story.published ? 'status-published' : 'status-draft' %>">
                                <%= story.published ? 'Published' : 'Draft' %>
                            </span>
                        </div>
                        
                        <div class="story-content">
                            <%= story.content %>
                        </div>
                        
                        <% if (story.images && story.images.length > 0) { %>
                            <div class="story-images">
                                <% story.images.forEach(image => { %>
                                    <img src="/uploads/stories/<%= image %>" alt="Story image" class="story-image">
                                <% }) %>
                            </div>
                        <% } %>
                        
                        <div class="story-actions">
                            <button class="btn btn-edit" onclick="openEditModal('<%= story.id %>')">
                                <i class="fas fa-edit"></i> Edit Story
                            </button>
                            <button class="btn btn-delete" onclick="confirmDelete('<%= story.id %>')">
                                <i class="fas fa-trash"></i> Delete Story
                            </button>
                            <% if (!story.published) { %>
                                <button class="btn btn-publish" onclick="publishStory('<%= story.id %>')">
                                    <i class="fas fa-globe"></i> Publish Story
                                </button>
                            <% } %>
                        </div>
                        
                        <form class="image-upload" action="/admin/stories/<%= story.id %>/images" method="POST" enctype="multipart/form-data" onsubmit="return validateImageUpload(this);">
                            <input type="file" name="images" multiple accept="image/*" class="form-control">
                            <button type="submit" class="btn btn-edit">
                                <i class="fas fa-cloud-upload-alt"></i> Add Images
                            </button>
                        </form>
                    </div>
                <% }) %>
            <% } else { %>
                <div class="no-stories">
                    <h3>No stories found</h3>
                    <p>Start sharing your stories about Bhutan by <a href="/admin/addStory">adding your first story</a>!</p>
                </div>
            <% } %>
        </div>
    </div>

    <!-- Edit Modal -->
    <div id="editModal" class="modal">
        <div class="modal-content">
            <span class="close-modal" onclick="closeEditModal()">&times;</span>
            <h2>Edit Story</h2>
            <form id="editForm" method="POST">
                <div class="form-group">
                    <label for="editTitle">Title</label>
                    <input type="text" id="editTitle" name="title" class="form-control" required>
                </div>
                <div class="form-group">
                    <label for="editContent">Content</label>
                    <textarea id="editContent" name="content" class="form-control" required></textarea>
                </div>
                <button type="submit" class="btn btn-edit">
                    <i class="fas fa-save"></i> Save Changes
                </button>
            </form>
        </div>
    </div>

    <script>
        function openEditModal(storyId) {
            const modal = document.getElementById('editModal');
            const form = document.getElementById('editForm');
            
            fetch(`/admin/stories/${storyId}`)
                .then(response => response.json())
                .then(story => {
                    document.getElementById('editTitle').value = story.title;
                    document.getElementById('editContent').value = story.content;
                    form.action = `/admin/stories/${storyId}?_method=PUT`;
                    modal.style.display = 'block';
                    showNotification('Story loaded successfully', 2000, 'info');
                })
                .catch(error => {
                    showNotification('Failed to load story details', 5000, 'error');
                });
        }

        function closeEditModal() {
            document.getElementById('editModal').style.display = 'none';
        }

        function confirmDelete(storyId) {
            if (confirm('Are you sure you want to delete this story? This action cannot be undone.')) {
                fetch(`/admin/stories/${storyId}`, {
                    method: 'DELETE',
                })
                .then(response => {
                    if (response.ok) {
                        showNotification('Story deleted successfully!');
                        window.location.reload();
                    } else {
                        showNotification('Failed to delete story', 5000);
                    }
                })
                .catch(error => {
                    showNotification('Error deleting story', 5000);
                });
            }
        }

        function publishStory(storyId) {
            if (confirm('Are you ready to publish this story? It will be visible to all users.')) {
                fetch(`/admin/stories/${storyId}/publish`, {
                    method: 'POST',
                })
                .then(response => {
                    if (response.ok) {
                        showNotification('Story published successfully!');
                        window.location.reload();
                    } else {
                        showNotification('Failed to publish story', 5000);
                    }
                })
                .catch(error => {
                    showNotification('Error publishing story', 5000);
                });
            }
        }

        function validateImageUpload(form) {
            const fileInput = form.querySelector('input[type="file"]');
            if (!fileInput.files || fileInput.files.length === 0) {
                showNotification('Please select at least one image', 5000);
                return false;
            }
            if (fileInput.files.length > 5) {
                showNotification('You can only upload up to 5 images at once', 5000);
                return false;
            }
            return true;
        }

        // Add submit handler for the edit form
        document.getElementById('editForm').addEventListener('submit', function(e) {
            e.preventDefault();
            const formData = new FormData(this);
            
            fetch(this.action, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(Object.fromEntries(formData))
            })
            .then(response => response.json())
            .then(data => {
                showNotification(data, 3000, 'success');
                closeEditModal();
            })
            .catch(error => {
                showNotification('Error updating story', 5000, 'error');
            });
        });

        // Close modal when clicking outside
        window.onclick = function(event) {
            const modal = document.getElementById('editModal');
            if (event.target == modal) {
                closeEditModal();
            }
        }

        function showNotification(message, duration = 6000, type = 'success') {
            const notification = document.getElementById('notification');
            const messageEl = document.getElementById('notification-message');
            
            // Remove any existing classes
            notification.classList.remove('notification-success', 'notification-error', 'notification-info');
            
            // Add appropriate type class
            notification.classList.add(`notification-${type}`);
            
            // If message is an object, format it nicely
            if (typeof message === 'object') {
                try {
                    // Create a formatted message from the object
                    const formattedMessage = Object.entries(message)
                        .map(([key, value]) => {
                            if (key === 'images') {
                                return `${key}: ${value.length} images uploaded`;
                            }
                            if (key === 'content') {
                                return `${key}: ${value.substring(0, 50)}...`;
                            }
                            return `${key}: ${value}`;
                        })
                        .join('\n');
                    messageEl.textContent = formattedMessage;
                    messageEl.style.whiteSpace = 'pre-line';
                } catch (e) {
                    messageEl.textContent = 'Operation completed successfully';
                }
            } else {
                messageEl.textContent = message;
            }
            
            notification.classList.remove('notification-hidden');
            notification.classList.add('notification-visible');
            
            // Clear any existing timeout
            if (notification.timeoutId) {
                clearTimeout(notification.timeoutId);
            }
            
            // Only set timeout if duration is provided
            if (duration) {
                notification.timeoutId = setTimeout(() => {
                    hideNotification();
                }, duration);
            }
        }

        function hideNotification() {
            const notification = document.getElementById('notification');
            notification.classList.remove('notification-visible');
            notification.classList.add('notification-hidden');
        }

        // Add event listener for close button
        document.querySelector('#notification .close-btn').addEventListener('click', () => {
            hideNotification();
        });
    </script>
</body>
</html>

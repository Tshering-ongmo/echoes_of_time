<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Admin - Testimonial Management</title>
  <link rel="stylesheet" href="/css/admin-dashboard.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  
  <style>
    .testimonials-container {
      padding: 20px;
      width: calc(100% - 300px);
      max-width: 1200px;
      margin: 0 auto;
      margin-left: 300px;
    }

    .testimonials-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 30px;
    }

    .testimonials-header h2 {
      font-size: 24px;
      color: #2c3e50;
      margin: 0;
    }

    .testimonials-stats {
      background: white;
      padding: 15px 25px;
      border-radius: 10px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
      display: flex;
      gap: 20px;
    }

    .stat-item {
      text-align: center;
    }

    .stat-number {
      font-size: 24px;
      font-weight: bold;
      color: #3498db;
    }

    .stat-label {
      font-size: 14px;
      color: #7f8c8d;
    }

    .testimonials-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 20px;
      margin-top: 20px;
    }

    .testimonial-card {
      background: white;
      border-radius: 10px;
      padding: 20px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
      transition: transform 0.2s ease, box-shadow 0.2s ease;
      position: relative;
      overflow: hidden;
    }

    .testimonial-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 4px 8px rgba(0,0,0,0.15);
    }

    .testimonial-header {
      display: flex;
      justify-content: space-between;
      align-items: flex-start;
      margin-bottom: 15px;
    }

    .user-info {
      flex-grow: 1;
    }

    .user-name {
      font-size: 18px;
      font-weight: 600;
      color: #2c3e50;
      margin: 0 0 5px 0;
    }

    .timestamp {
      font-size: 12px;
      color: #95a5a6;
    }

    .rating {
      display: flex;
      gap: 2px;
      margin: 10px 0;
    }

    .star-filled {
      color: #f1c40f;
    }

    .star-empty {
      color: #ddd;
    }

    .testimonial-content {
      color: #34495e;
      line-height: 1.6;
      margin-bottom: 20px;
      font-size: 14px;
    }

    .testimonial-actions {
      display: flex;
      gap: 10px;
      margin-top: 15px;
    }

    .action-btn {
      flex: 1;
      padding: 8px 15px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      font-size: 14px;
      font-weight: 500;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 5px;
      transition: all 0.2s ease;
    }

    .approve-btn {
      background-color: #2ecc71;
      color: white;
    }

    .approve-btn:hover {
      background-color: #27ae60;
    }

    .delete-btn {
      background-color: #e74c3c;
      color: white;
    }

    .delete-btn:hover {
      background-color: #c0392b;
    }

    .no-testimonials {
      text-align: center;
      padding: 40px;
      background: white;
      border-radius: 10px;
      color: #7f8c8d;
    }

    .filters {
      display: flex;
      gap: 15px;
      margin-bottom: 20px;
    }

    .filter-btn {
      padding: 8px 15px;
      border: none;
      border-radius: 5px;
      background: white;
      color: #34495e;
      cursor: pointer;
      transition: all 0.2s ease;
    }

    .filter-btn.active {
      background: #3498db;
      color: white;
    }

    .search-box {
      padding: 8px 15px;
      border: 1px solid #ddd;
      border-radius: 5px;
      width: 200px;
    }

    @media (max-width: 768px) {
      .testimonials-grid {
        grid-template-columns: 1fr;
      }
      
      .testimonials-stats {
        flex-direction: column;
        gap: 10px;
      }
    }
  </style>
</head>
<body>
  <%- include('./component/header') %>
  
  <div class="testimonials-container">
    <div class="testimonials-header">
      <h2>Testimonial Management</h2>
      <div class="testimonials-stats">
        <div class="stat-item">
          <div class="stat-number"><%= pending.length %></div>
          <div class="stat-label">Pending</div>
        </div>
      </div>
    </div>

    <div class="filters">
      <input type="text" class="search-box" placeholder="Search testimonials..." id="searchBox">
      <button class="filter-btn active" data-filter="all">All</button>
      <button class="filter-btn" data-filter="recent">Recent</button>
      <button class="filter-btn" data-filter="highest">Highest Rated</button>
    </div>

    <% if (pending.length === 0) { %>
      <div class="no-testimonials">
        <i class="fas fa-comment-slash fa-3x"></i>
        <h3>No Pending Testimonials</h3>
        <p>All testimonials have been reviewed</p>
      </div>
    <% } else { %>
      <div class="testimonials-grid">
        <% pending.forEach(t => { %>
          <div class="testimonial-card" data-rating="<%= t.rating || 0 %>">
            <div class="testimonial-header">
              <div class="user-info">
                <h3 class="user-name"><%= t.user_name %></h3>
                <div class="timestamp"><%= new Date(t.created_at).toLocaleDateString('en-US', { 
                  year: 'numeric', 
                  month: 'short', 
                  day: 'numeric',
                  hour: '2-digit',
                  minute: '2-digit'
                }) %></div>
              </div>
            </div>
            
            <div class="rating">
              <% for(let i = 1; i <= 5; i++) { %>
                <i class="fas fa-star star <%= i <= t.rating ? 'star-filled' : 'star-empty' %>"></i>
              <% } %>
            </div>

            <div class="testimonial-content">
              <%= t.content %>
            </div>

            <div class="testimonial-actions">
              <form action="/admin/approveTestimonial/<%= t.id %>" method="POST" style="flex: 1;">
                <button type="submit" class="action-btn approve-btn">
                  <i class="fas fa-check"></i> Approve
                </button>
              </form>
              <form action="/admin/deleteTestimonial/<%= t.id %>" method="POST" style="flex: 1;">
                <button type="submit" class="action-btn delete-btn">
                  <i class="fas fa-trash"></i> Delete
                </button>
              </form>
            </div>
          </div>
        <% }) %>
      </div>
    <% } %>
  </div>

  <script>
    // Search functionality
    const searchBox = document.getElementById('searchBox');
    const testimonialCards = document.querySelectorAll('.testimonial-card');

    searchBox.addEventListener('input', (e) => {
      const searchTerm = e.target.value.toLowerCase();
      
      testimonialCards.forEach(card => {
        const content = card.querySelector('.testimonial-content').textContent.toLowerCase();
        const userName = card.querySelector('.user-name').textContent.toLowerCase();
        
        if (content.includes(searchTerm) || userName.includes(searchTerm)) {
          card.style.display = 'block';
        } else {
          card.style.display = 'none';
        }
      });
    });

    // Filter functionality
    const filterButtons = document.querySelectorAll('.filter-btn');

    filterButtons.forEach(btn => {
      btn.addEventListener('click', () => {
        // Remove active class from all buttons
        filterButtons.forEach(b => b.classList.remove('active'));
        // Add active class to clicked button
        btn.classList.add('active');

        const filter = btn.dataset.filter;
        
        testimonialCards.forEach(card => {
          card.style.display = 'block';
          
          if (filter === 'recent') {
            // Sort by date
            const container = document.querySelector('.testimonials-grid');
            const cards = Array.from(testimonialCards);
            cards.sort((a, b) => {
              const dateA = new Date(a.querySelector('.timestamp').textContent);
              const dateB = new Date(b.querySelector('.timestamp').textContent);
              return dateB - dateA;
            });
            cards.forEach(card => container.appendChild(card));
          } else if (filter === 'highest') {
            // Sort by rating
            const container = document.querySelector('.testimonials-grid');
            const cards = Array.from(testimonialCards);
            cards.sort((a, b) => {
              const ratingA = parseInt(a.dataset.rating) || 0;
              const ratingB = parseInt(b.dataset.rating) || 0;
              return ratingB - ratingA;
            });
            cards.forEach(card => container.appendChild(card));
          }
        });
      });
    });
  </script>
</body>
</html>